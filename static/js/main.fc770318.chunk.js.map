{"version":3,"sources":["components/BasicInfo.js","components/WorkInfo.js","components/ConfirmInfo.js","components/Success.js","components/MainForm.js","App.js","serviceWorker.js","index.js"],"names":["BasicInfo","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","continue","event","preventDefault","props","nextStep","inherits","createClass","key","value","_this$props","values","handleChange","react_default","a","createElement","reactstrap_es","style","styles","main","type","placeholder","defaultValue","name","onChange","autoFocus","phone","email","color","block","size","onClick","Component","width","margin","padding","maxWidth","WorkInfo","back","prevStep","occupation","city","bio","button","marginRight","marginTop","ConfirmInfo","listItems","entries","map","capitalize","textTransform","Success","state","redirectTime","_this2","window","setTimeout","location","href","setInterval","setState","className","textAlign","MainForm","step","input","e","defineProperty","target","_this$state","components_BasicInfo","components_WorkInfo","components_ConfirmInfo","components_Success","App","dark","expand","components_MainForm","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc770318.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Jumbotron, FormGroup, Label, Input } from 'reactstrap';\n\nexport class BasicInfo extends Component {\n\n    continue = (event) => {\n        event.preventDefault();\n        this.props.nextStep();\n    }\n\n  render() {\n      const { values, handleChange } = this.props;\n    return (\n        <Jumbotron style={styles.main}>\n            <FormGroup>\n                <Label>Name</Label>\n                <Input  type=\"text\" \n                        placeholder=\"Enter your name\"\n                        defaultValue = {values.name} \n                        onChange = {handleChange('name')}\n                        autoFocus = {true}\n                    />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Phone Number</Label>\n                <Input type=\"tel\" \n                    placeholder=\"Enter your phone number\"\n                    defaultValue = {values.phone} \n                    onChange = {handleChange('phone')}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Email</Label>\n                <Input type=\"email\" \n                    placeholder=\"Enter your email\" \n                    defaultValue = {values.email} \n                    onChange = {handleChange('email')}\n                />\n            </FormGroup>\n\n            <Button color=\"success\" block size=\"md\" onClick={this.continue}>Continue</Button>\n        </Jumbotron>\n    )\n  }\n}\n\nconst styles = {\n    main: {\n      width: '50%',\n      margin: '20px auto',\n      padding: '2rem',\n      maxWidth: '450px'\n    }\n  }\n\nexport default BasicInfo;\n","import React, { Component } from 'react';\nimport { Button, Jumbotron, FormGroup, Label, Input } from 'reactstrap';\n\nexport class WorkInfo extends Component {\n    \n    continue = (event) => {\n        event.preventDefault();\n        this.props.nextStep();\n    }\n\n    back = (event) => {\n        event.preventDefault();\n        this.props.prevStep();\n    }\n\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n        <Jumbotron style={styles.main}>\n            <FormGroup>\n                <Label>Occupation</Label>\n                <Input  type=\"text\" \n                        placeholder=\"Enter your occupation\"\n                        defaultValue = {values.occupation} \n                        onChange = {handleChange('occupation')}\n                        autoFocus = {true}\n                    />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>City</Label>\n                <Input type=\"text\" \n                    placeholder=\"Enter your city\"\n                    defaultValue = {values.city} \n                    onChange = {handleChange('city')}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Your Bio</Label>\n                <Input type=\"textarea\" \n                    placeholder=\"Enter your bio\" \n                    defaultValue = {values.bio} \n                    onChange = {handleChange('bio')}\n                />\n            </FormGroup>\n\n        <Button color=\"success\" block style={styles.button} size=\"md\" onClick={this.continue}>Continue</Button>\n        <Button color=\"info\" block style={styles.button} size=\"md\" onClick={this.back}>Back</Button>\n    </Jumbotron>\n    )\n  }\n}\n\nconst styles = {\n    button:{\n        marginRight: '5px',\n        marginTop: '5px'\n    },\n    main: {\n        width: '50%',\n        margin: '20px auto',\n        padding: '2rem',\n        maxWidth: '450px'\n    }\n}\n\nexport default WorkInfo\n","import React, { Component } from 'react';\nimport { Button, Jumbotron, ListGroup, ListGroupItem } from 'reactstrap';\n\nexport class ConfirmInfo extends Component {\n\n    continue = (event) => {\n        event.preventDefault();\n        this.props.nextStep();\n    }\n\n    back = (event) => {\n        event.preventDefault();\n        this.props.prevStep();\n    }\n\n  render() {\n    const { values } = this.props;\n    const listItems = Object.entries(values).map((value, key) => {\n        return (\n            <ListGroupItem key={key}><strong style={styles.capitalize}>{value[0]}:</strong>{' '}{value[1]}</ListGroupItem>\n        );\n    }); \n    return (\n      <Jumbotron style={styles.main}>\n          <h6>Confirm User Details</h6>\n            <ListGroup>\n                {listItems}\n            </ListGroup>\n\n            <Button color=\"success\" block style={styles.button} size=\"md\" onClick={this.continue}>Confirm &amp; Submit</Button>\n            <Button color=\"info\" block style={styles.button} size=\"md\" onClick={this.back}>Back</Button>\n      </Jumbotron>\n    )\n  }\n}\n\nconst styles = {\n    button:{\n        marginRight: '5px',\n        marginTop: '5px'\n    },\n    main: {\n        width: '50%',\n        margin: '20px auto',\n        padding: '2rem',\n        maxWidth: '450px'\n    },\n    capitalize: {\n        textTransform: 'capitalize'\n    }\n}\n\nexport default ConfirmInfo\n","import React, { Component } from 'react'\nimport { Alert } from 'reactstrap';\n\nexport class Success extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      redirectTime: 5\n    }\n  }\n  componentDidMount(){\n    window.setTimeout( () => {\n      window.location.href = '/'\n    }, 5000);\n    \n    setInterval(() => {\n      this.setState({ redirectTime: this.state.redirectTime - 1 })\n    }, 1000);\n  }\n  render() {\n    const { redirectTime } = this.state;\n    return (\n      <Alert color=\"success\" style={styles.main}>\n        <h3>Success</h3>\n        <p className=\"muted\">User Data is been submitted successfully. <br /> Redirecting back to home page in {redirectTime} sec.</p>\n      </Alert>\n    )\n  }\n}\n\nconst styles = {\n  main: {\n      maxWidth: '650px',\n      width: '70%',\n      margin: '10px auto',\n      padding: '2rem',\n      textAlign: 'center'\n    }\n}\n\nexport default Success\n","import React, { Component } from 'react';\nimport BasicInfo from './BasicInfo';\nimport WorkInfo from './WorkInfo';\nimport ConfirmInfo from './ConfirmInfo';\nimport Success from './Success';\n\nexport class MainForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            step : 1,\n            name: '',\n            phone: '',\n            email: '',\n            city: '',\n            occupation: '',\n            bio: ''\n        }\n    }\n\n    nextStep = () => {\n        const { step } = this.state;\n        this.setState({ step : step + 1 });\n    }\n\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({ step: step - 1 });\n    }\n\n    handleChange = input => e => {\n        this.setState({ [input] : e.target.value });\n    }\n\n  render() {\n      const { step } = this.state;\n      const { name, phone, email, city, occupation, bio } = this.state;\n      const values = { name, phone, email, city, occupation, bio };\n    \n      switch (step){\n        case 1:\n            return (\n                <BasicInfo \n                    nextStep = {this.nextStep}\n                    handleChange = {this.handleChange}\n                    values = { values }\n                />\n            );\n        case 2:\n            return (\n                <WorkInfo \n                    prevStep = {this.prevStep}\n                    nextStep = {this.nextStep}\n                    handleChange = {this.handleChange}\n                    values = { values }\n                />\n            );\n        case 3: \n            return (\n                <ConfirmInfo \n                    prevStep = {this.prevStep}\n                    nextStep = {this.nextStep}\n                    values = { values }\n                />\n            );\n        case 4:\n            return <Success />\n        default:\n            break;\n      }\n  }\n}\n\nexport default MainForm;\n","import React, { Component } from 'react';\nimport MainForm from './components/MainForm';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"/\">Simple User Database</NavbarBrand>\n      </Navbar>\n      <MainForm/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}